/*
 * analog.c
 *
 *  Created on: 12.12.2018
 *      Author: MB
 */

#include "analog.h"


extern UART_HandleTypeDef huart1;

static osThreadId uartTaskHandle;;
uint8_t text;

void ReadUartTask(void){
	while(1){
			if(HAL_UART_Receive(&huart1, &text, sizeof(text), 0) == HAL_OK){
				printf("%c", text);
			}
			else{
				// printf("no data \r\n");
			}
		}


}


void InitAnalog(void){
	// ghört das uart hier rein? am besten nochmal abstrahieren
	osThreadDef(UartTask, ReadUartTask, osPriorityNormal, 0, 128);
	uartTaskHandle = osThreadCreate(osThread(UartTask), NULL);
}




//
//
///* This callback is called by the HAL_UART_IRQHandler when the given number of bytes are received */
//void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
//{
//  if (huart->Instance == USART1)
//  {
////    /* Transmit one byte with 100 ms timeout */
////    HAL_UART_Transmit(&huart1, &text, 1, 100);
//
//
//
//    /* Receive one byte in interrupt mode */
//    HAL_UART_Receive_IT(&huart1, &text, 1);
//  }
//}

