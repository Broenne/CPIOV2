/*
 * analog.c
 *
 *  Created on: 12.12.2018
 *      Author: MB
 */

#include "analog.h"

extern UART_HandleTypeDef huart1;

static osThreadId uartTaskHandle;
;
uint8_t text;

#define ANA_CHANNEL_COMMAND "AnaCh"

void SendAnalogValue(char* data) {

	for (int i = 0; i < 16; ++i) {
		int stringComapreLength = 6;
		if (i > 9) {
			stringComapreLength++;
		}

		char str[2];
		sprintf(str, "%d", i);
		//const char* cmp = strcat(ANA_CHANNEL_COMMAND, str);

//		char cmp[sizeof(ANA_CHANNEL_COMMAND) + 2];
//		strcat(cmp, ANA_CHANNEL_COMMAND);
		strcat(ANA_CHANNEL_COMMAND, str);

		if (strncmp(data, cmp, stringComapreLength)) {
			printf("AnaCh1 result %d \r\n", i);
			break;
		}

	}

}

void ReadUartTask(void) {
	char inputData[50];
	int pos = 0;
	//std::string cmd;

	while (1) {
		if (HAL_UART_Receive(&huart1, &text, sizeof(text), 0) == HAL_OK) {

			if (text == 0x00) {
				// clear all, NULL-terminierter String

				SendAnalogValue(inputData);
				pos = 0;
				continue;

			} else {
				inputData[pos] = text;
			}

			++pos;

		} else {
			// printf("no data \r\n");
		}
	}
}

void InitAnalog(void) {
	// ghört das uart hier rein? am besten nochmal abstrahieren
	osThreadDef(UartTask, ReadUartTask, osPriorityNormal, 0, 128);
	uartTaskHandle = osThreadCreate(osThread(UartTask), NULL);
}
